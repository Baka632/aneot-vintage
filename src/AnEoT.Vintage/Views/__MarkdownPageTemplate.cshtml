@using System.Globalization;
@using Microsoft.AspNetCore.Http.Features;
@using AnEoT.Vintage.Helpers;

@inject PageTitleHelper pageTitleHelper
@inject CategoryAndTagHelper categoryAndTagHelper
@inject VolumeInfoHelper volumeInfoHelper;
@model Westwind.AspNetCore.Markdown.MarkdownModel

@{
    ViewBag.Title = Model.Title;
    Layout = "_Layout";
    IHttpRequestFeature? httpRequestFeature = Context.Features.Get<IHttpRequestFeature>();
    string[] uriParts = httpRequestFeature?.RawTarget.Split('/', StringSplitOptions.RemoveEmptyEntries) ?? Array.Empty<string>();

    ArticleInfo articleInfo;
    @if (Model.YamlHeader is not null)
    {
        articleInfo = YamlHelper.ReadYaml<ArticleInfo>(Model.YamlHeader);
    }
    else
    {
        articleInfo = default;
    }

    int wordCount = MarkdownHelper.GetWordCount(Model.RawMarkdown);

    ViewBag.RawMarkdown = Model.RawMarkdown;
    ViewBag.ArticleInfo = articleInfo;
}

@if (MarkdownHelper.IsContainHtmlClass(Model.RawMarkdown, "textkai"))
{
    <!-- 反正 Internet Explorer 也不支持 WOFF2 字体，不如不加载 -->
    <!--[if !IE]> -->
    <link href="https://unpkg.com/lxgw-wenkai-screen-webfont@1.6.0/style.css" rel="stylesheet" type="text/css" />
    <!-- <![endif]-->
}

<div class="content-margin">
    @if (uriParts.Any() && uriParts.Length > 1)
    {
        <div>
            @for (int i = 0; i < uriParts.Length; i++)
            {
                if (i != 0)
                {
                    <span style="margin-left:1px;margin-right:1px">/</span>
                }

                if (i != uriParts.Length - 1)
                {
                    string target = string.Join('/', uriParts[..(i + 1)]);
                    string displayTitle = @pageTitleHelper.GetPageTitle(target);
                    <a href="/@target">@displayTitle</a>
                }
                else
                {
                    <span>@Model.Title</span>
                }
            }
        </div>
    }
    <h1 style="margin-bottom:10px">@Model.Title</h1>
    @if (uriParts.Any())
    {
        string target = string.Join('/', uriParts);
        <div style="margin-bottom:10px">
            <a href="https://aneot.arktca.com/@target">在原网站查看此页面</a>
            <br />
        </div>
    }
    <span>作者： @(string.IsNullOrWhiteSpace(articleInfo.Author) ? "Another End of Terra" : articleInfo.Author)</span>
    <br />
    @if (DateOnly.TryParse(articleInfo.Date, CultureInfo.InvariantCulture, out DateOnly result))
    {
        <span>日期： @result.ToString("yyyy年M月d日")</span>
        <br />
    }
    @if (articleInfo.Category is not null)
    {
        <span>
            分类：@foreach (string item in articleInfo.Category)
            {
                @if (categoryAndTagHelper.GetAllCategories().Contains(item))
                {
                    <a style="margin: 0 auto 0 0;" href="/category/@item/">@item</a>
                }
                else
                {
                    <span style="margin: 0 auto 0 0;">@item</span>
                }
            }
        </span>
        <br />
    }

    @if (articleInfo.Tag is not null)
    {
        <span>
            标签：@foreach (string item in articleInfo.Tag)
            {
                @if (categoryAndTagHelper.GetAllTags().Contains(item))
                {
                    <a style="margin: 0 auto 0 0;" href="/tag/@item/">@item</a>
                }
                else
                {
                    <span style="margin: 0 auto 0 0; text-decoration: underline;">@item</span>
                }
            }
        </span>
        <br />
    }

    @if (wordCount > 0)
    {
        <span>
            字数： 约 @wordCount 字
        </span>
    }
</div>

<div class="content-margin para-indent">
    @Model.RenderedMarkdown

    @if (articleInfo != default
        && uriParts.Length >= 2
        && uriParts[0].Equals("posts", StringComparison.OrdinalIgnoreCase)
        && volumeInfoHelper.TryGetTargetVolumeInfo(uriParts[1], out VolumeInfo? volumeInfo))
    {
        IReadOnlyDictionary<Uri, ArticleInfo> articlesDictionary = volumeInfo.Value.Articles;
        List<ArticleInfo> articles = articlesDictionary.Values.Order().ToList();
        int currentArticleIndex = articles.IndexOf(articleInfo);

        @if (currentArticleIndex != -1 || uriParts.Length == 2)
        {
            <div style="margin-top: 20px; overflow: auto; zoom: 1;">
                @{
                    {
                        string formerText = string.Empty;
                        string formerUri = string.Empty;
                        string formerTitle = string.Empty;
                        bool showFormer = false;

                        if (currentArticleIndex == -1
                        && volumeInfoHelper.TryGetFormerVolumeInfo(volumeInfo.Value, out VolumeInfo? formerVolume))
                        {
                            formerUri = $"/posts/{formerVolume.Value.VolumeFolderName}/";
                            formerText = "上一期期刊";
                            formerTitle = formerVolume.Value.VolumeName;
                            showFormer = true;
                        }
                        else if (currentArticleIndex > 0)
                        {
                            ArticleInfo formerArticle = articles[currentArticleIndex - 1];
                            formerUri = articlesDictionary.First(pair => pair.Value == formerArticle).Key.ToString();
                            formerText = "上一篇文章";
                            formerTitle = formerArticle.Title;
                            showFormer = true;
                        }
                        else if (currentArticleIndex == 0)
                        {
                            formerUri = $"/posts/{volumeInfo.Value.VolumeFolderName}/";
                            formerText = "上一篇文章";
                            formerTitle = "本期目录";
                            showFormer = true;
                        }

                        if (showFormer)
                        {
                            <div class="text-left-float">
                                @formerText
                                <br />
                                <a href="@formerUri">@formerTitle</a>
                            </div>
                        }
                    }
                }

                @{
                    {
                        string nextText = string.Empty;
                        string nextUri = string.Empty;
                        string nextTitle = string.Empty;
                        bool showNext = false;

                        if (currentArticleIndex == articles.Count - 1
                        && volumeInfoHelper.TryGetNextVolumeInfo(volumeInfo.Value, out VolumeInfo? nextVolume))
                        {
                            nextUri = $"/posts/{nextVolume.Value.VolumeFolderName}/";
                            nextText = "下一期期刊";
                            nextTitle = nextVolume.Value.VolumeName;
                            showNext = true;
                        }
                        else if (currentArticleIndex >= -1 && currentArticleIndex + 1 < articles.Count)
                        {
                            ArticleInfo nextArticle = articles[currentArticleIndex + 1];
                            nextUri = articlesDictionary.First(pair => pair.Value == nextArticle).Key.ToString();
                            nextText = "下一篇文章";
                            nextTitle = nextArticle.Title;
                            showNext = true;
                        }

                        if (showNext)
                        {
                            <div class="text-right-float">
                                @nextText
                                <br />
                                <a href="@nextUri">@nextTitle</a>
                            </div>
                        }
                    }
                }
            </div>
        }
    }
</div>